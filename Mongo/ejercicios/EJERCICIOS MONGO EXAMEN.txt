EJERCICIOS MONGO EXAMEN 

- EJ1

1. En sample_training.zips ¿Cuántas colecciones tienen
menos de 1000 personas en el campo pop? (sol. 8065)

sample_training> db.zips.countDocuments({"pop":{$lt:1000}})
8065

2. En sample_training.trips ¿Cuál es la diferencia entre la
gente que nació en 1998 y la que nació después de 1998? (sol.
6)

sample_training> db.trips.countDocuments({"birth year": {$eq: 1998}})
12
sample_training> db.trips.countDocuments({"birth year": {$gt: 1998}})
18

3. En sample_training.routes ¿Cuántas rutas tienen al menos
una parada? (sol. 11)

sample_training> db.routes.countDocuments({"stops": {$gte: 1}})
11

- EJ2

1. En sample_training.companies, ¿cuántas empresas tienen
más empleados que el año en el que se fundaron? (sol. 324)

sample_training> db.companies.find({$expr: {$gt: ["$number_of_employees", "$founded_year"]}}).count()
324

2. En sample_training.companies, ¿en cuántas empresas
coinciden su permalink con su twitter_username? (sol.
1299)

sample_training> db.companies.find({$expr: {$eq: ["$permalink", "$twitter_username"]}}).count()
1299

3. En sample_airbnb.listingsAndReviews, ¿cuál es el nombre
del alojamiento en el que pueden estar más de 6 personas
alojadas y tiene exactamente 50 reviews? (sol. Sunset Beach
Lodge Retreat)

sample_airbnb> db.listingsAndReviews.findOne({ accommodates: {$gt:6},  number_of_reviews:50}, {name:1})
{ _id: '4294289', name: 'Sunset Beach Lodge Retreat' }
--------------------------------------------------------------------
db.listingsAndReviews.findOne({$and: [{ accommodates: {$gt:6}}, { number_of_reviews: {$eq:50}}]})

4. En sample_airbnb.listingsAndReviews, ¿cuántos
documentos tienen el "property_type" "House" e incluyen
"Changing table" como una de las "amenities"? (sol. 11)

sample_airbnb> db.listingsAndReviews.countDocuments({ $and: [{property_type:{$eq: "House"}}, { amenities: {$in:["Changing table"]}}]})
11

5. En sample_training.companies, ¿Cuántas empresas tienen
oficinas en Seattle? (sol. 117)

sample_training> db.companies.countDocuments({"offices.city":"Seattle"})
117

### IMP: las oficinas se representan como unarray de objetos, para acceder a ala ciudad de cada oficina: offices.city

6. En sample_training.companies, haga una query que
devuelva únicamente el nombre de las empresas que tengan
exactamente 8 "funding_rounds"

sample_training> db.companies.find({funding_rounds: {$size:8}}, {name:1, _id: 0})
[
  { name: 'Twitter' },
  { name: 'LinkedIn' },
  { name: 'PayScale' },
  { name: 'Xobni' },
  { name: 'Zynga' },
  { name: 'ShareThis' },
  { name: 'TicketLeap' },
  { name: 'Moblyng' },
  { name: 'PlumChoice' },
  { name: 'SolFocus' },
  { name: 'HyperWeek' },
  { name: 'Virident Systems' },
  { name: 'Extreme Enterprises' },
  { name: 'CipherMax' },
  { name: 'Stemgent' },
  { name: 'Sonos' },
  { name: 'BridgeLux' },
  { name: 'Silicor Materials' },
  { name: '1366 Technologies' },
  { name: 'Biolex Therapeutics' }
]

### IMP: funding_rounds es un array de objetos, se utiliza $size para analizar la longitud del array.


7. En sample_training.trips, ¿cuántos viajes empiezan en
estaciones que están al oeste de la longitud -74? (sol. 1928)
Nota 1: Hacia el oeste la longitud decrece
Nota 2: el formato es <field_name>: [ <longitud>, <latitud> ]
### FORMATO:'start station location': { type: 'Point', coordinates: [ -74.0026376103, 40.7390169121 ] }

sample_training> db.trips.countDocuments({"start station location.coordinates.0":{ $lt: -74}})
1928

8. En sample_training.inspections, ¿cuántas inspecciones se
llevaron a cabo en la ciudad de "NEW YORK"? (sol. 18279)
### address es un objeto.

sample_training> db.inspections.countDocuments({"address.city":"NEW YORK"})
18279

9. En sample_airbnb.listingsAndReviews, haga una query que
devuelva el nombre y la dirección de los alojamientos que
tengan "Internet" como primer elemento de "amenities"

sample_airbnb> db.listingsAndReviews.find({ "amenities.0": "Internet"}, {name:1, _id:0, address:1, amenities:1})

- EJ3

1. En sample_airbnb.listingsAndReviews, ¿qué "room types"
existen?

sample_airbnb> db.listingsAndReviews.distinct("room_type")
[ 'Entire home/apt', 'Private room', 'Shared room' ]

2. En sample_training.companies, haga una query que
devuelva el nombre y el año en el que se fundaron las 5
compañías más antiguas.

sample_training> db.companies.find({founded_year: {$ne: null}}, {name:1, _id:0, founded_year:1}).sort({"founded_year":1}).limit(5)
[
  { name: 'US Army', founded_year: 1800 },
  { name: 'Alstrasoft', founded_year: 1800 },
  { name: 'DuPont', founded_year: 1802 },
  { name: 'Bachmann Industries', founded_year: 1833 },
  { name: 'Bertelsmann', founded_year: 1835 }
]

3. En sample_training.trips, ¿en qué año nació el ciclista más
joven? (sol. 1999)

sample_training> db.trips.find({"birth year": {$nin: [null, ""]}}, {_id:0, "birth year":1}).sort({"birth year":-1}).limit(1)
[ { 'birth year': 1999 } ]



